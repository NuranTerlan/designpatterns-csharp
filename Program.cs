using System;
using System.Collections.Generic;

namespace DesignPatterns
{
    class Program
    {
        static void Main(string[] args)
        {
            var random = new Random();

            // Builder Pattern Usage: START

            // creating dummy data for products simulation
            int capacity = 3;
            var products = new List<Product>(capacity);
            for (int i = 1; i <= capacity; i++)
                products.Add(
                    new Product
                    {
                        Id = Guid.NewGuid(),
                        Name = $"Product {i}",
                        Price = Math.Round(random.NextDouble() * 100, 2),
                        NumberInStock = random.Next(100)
                    });

            // creation of builder is mandatory. because we use it when we create manager for report builder
            var builder = new ProductStockReportBuilder(products);
            var manager = new ProductStockReportManager(builder);

            // report is generated by manager
            manager.BuildReport();

            var productsReport = builder.GetReport();
            Console.WriteLine(productsReport);

            // Builder Pattern Usage: END
        }
    }
}
